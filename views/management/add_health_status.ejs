<style>
    .form-disabled{
        border: 1px solid red;
    }
</style>
<div id="add_health_status" style="display: none;">
    <div class="row">
        <div class="col-6">
            <div class="row">
                <div class="col-6">
                    <input type="text" placeholder="體溫（上午）" class="form-control" :class="{ 'form-disabled': !checkJustNumber_AM }" v-model="form.temperature_am" >
                </div>
                <div class="col-6">
                    <input type="text" placeholder="體溫（下午）" class="form-control" :class="{ 'form-disabled': !checkJustNumber_PM }" v-model="form.temperature_pm">
                </div>
                <div style="margin-top: 20px">
                 症狀:
                    <el-checkbox-group v-model="checkboxGroup1" size="small"></el-checkbox-group>
                       <template v-for="(item, index) in types">
                        <el-checkbox  :label="item.type_name" border size="medium"></el-checkbox>
                       </template>
                    </el-checkbox>
                </div>
                <div class="col-12">
                備註:
                <el-input type="textarea"  :rows="5"  placeholder="请输入内容" v-model="textarea"></el-input>
                </div>
            </div>
        </div>
        <div class="col-6">
        
        </div>
    </div>
</div>

<script>
    new Vue({
        el: "#add_health_status",
        data: {
            form: {
                temperature_am: '',
                temperature_pm: '',
                checkboxGroup1:[]
            },
            types: [],
            allowNumberChars: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "."],
        },
        created() {            
        
           let vm=this;
           vm.getAllSymptomType();
        },
        methods: {
            checkJustNumberAndDot(value){
                //若為空
                if (value.length <=0) 
                    return false;
                //若第一個或最後一個為.
                if (value[0] === '.' || value[value.length -1 ] === '.' ){
                    return false;
                }
                let dotCount = 0;
                for( let i = 0; i < value.length; i++ ){
                    if ( !this.allowNumberChars.includes(value[i]) ){
                        return false;
                    }
                    if ( value[i] == '.' ){
                        dotCount++;
                    }
                }
                if (dotCount > 1){
                    return false;
                }
                return true;
            },
            getAllSymptomType(){
                let vm = this;
                axios.get('/management/get_all_symptom_types')
                .then((res) => {
                    vm.types = res.data;
                })
            },
        },
        computed: {
            checkJustNumber_AM(){
                let vm = this;
                value = vm.form.temperature_am.split('');
                return vm.checkJustNumberAndDot(value);
            },
            checkJustNumber_PM(){
                let vm = this;
                value = vm.form.temperature_pm.split('');
                return vm.checkJustNumberAndDot(value);
            }
        }
    })
</script>